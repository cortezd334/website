[{"/Users/danira/Projects/website/portfolio/src/Components/Projects.jsx":"1","/Users/danira/Projects/website/portfolio/src/Components/About.jsx":"2","/Users/danira/Projects/website/portfolio/src/Components/Contact.jsx":"3","/Users/danira/Projects/website/portfolio/src/Components/Resume.jsx":"4","/Users/danira/Projects/website/portfolio/src/Components/Blog.jsx":"5","/Users/danira/Projects/website/portfolio/src/Components/Home.jsx":"6","/Users/danira/Projects/website/portfolio/src/App.js":"7","/Users/danira/Projects/website/portfolio/src/utils/ToText.js":"8","/Users/danira/Projects/website/portfolio/src/index.js":"9"},{"size":3497,"mtime":1610181223657,"results":"10","hashOfConfig":"11"},{"size":2315,"mtime":1610172563446,"results":"12","hashOfConfig":"11"},{"size":1596,"mtime":1610172601651,"results":"13","hashOfConfig":"11"},{"size":1424,"mtime":1610170004742,"results":"14","hashOfConfig":"11"},{"size":2075,"mtime":1610172705590,"results":"15","hashOfConfig":"11"},{"size":1173,"mtime":1610179245745,"results":"16","hashOfConfig":"11"},{"size":3246,"mtime":1610182447890,"results":"17","hashOfConfig":"11"},{"size":155,"mtime":1609590922209,"results":"18","hashOfConfig":"11"},{"size":461,"mtime":1607491189886,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yiy8td",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/danira/Projects/website/portfolio/src/Components/Projects.jsx",[],"/Users/danira/Projects/website/portfolio/src/Components/About.jsx",[],"/Users/danira/Projects/website/portfolio/src/Components/Contact.jsx",[],"/Users/danira/Projects/website/portfolio/src/Components/Resume.jsx",[],"/Users/danira/Projects/website/portfolio/src/Components/Blog.jsx",["40"],"import React from 'react';\nimport ToText from '../utils/ToText'\n\nexport default function Blog({blog, profile}) {\n\n    function truncateText(text, start, len) {\n        return text.length > len ? `${text.slice(start, len)}...` : text;\n    }\n\n    const haveBlogs = () => {\n        if(blog.item) {\n            return blog.item.map((post, index) => (\n                <div className='grid card ab border shadow' key={index}>\n                    <div className='card-image tb' style={{backgroundImage: `url(${post.thumbnail})`}}>\n                        <div className='authorImg'>\n                            <a href={profile.profileUrl} rel='noopener noreferrer' target='_blank' style={{backgroundImage: `url(${profile.profileImage})`}}></a>\n                        </div>\n                    </div>\n                    <div className='card-body'>\n                        <h5 className='card-title'>\n                        <a href={post.link} className='postTitle' rel=\"noreferrer\" target='_blank'>{truncateText(post.title, 0, 80)}</a></h5>\n                        <p className='cardText'>{truncateText(ToText(post.description), 0, 265)}</p>\n                    </div>\n                </div>\n            ))\n        }\n    }\n    \n    return(\n        <div className='blogs'>\n            <h2>Blog Posts</h2>\n            <div className='container auto30'>\n                {blog.isLoading? 'Loading...' : haveBlogs()}\n            </div>\n        </div>\n    )\n}\n\n\n\n\n// {post.link.length > 150? (\n//     <div className='card-body'>\n//         <h5 className='card-title'>\n//         <a href={post.link} className='postTitle' rel=\"noreferrer\" target='_blank'>{post.title}</a></h5>\n//         <p className='cardText'>{`${ToText(post.description.substring(0, 250))}...`}</p>\n//     </div>\n// ) : (\n//     <div className='card-body'>\n//         <h5 className='card-title'>\n//         <a href={post.link} className='postTitle' rel=\"noreferrer\" target='_blank'>{post.title}</a></h5>\n//         <p className='cardText'>{`${ToText(post.description.substring(0, 365))}...`}</p>\n//     </div>\n// )}",["41","42"],"/Users/danira/Projects/website/portfolio/src/Components/Home.jsx",[],"/Users/danira/Projects/website/portfolio/src/App.js",[],"/Users/danira/Projects/website/portfolio/src/utils/ToText.js",[],"/Users/danira/Projects/website/portfolio/src/index.js",[],{"ruleId":"43","severity":1,"message":"44","line":16,"column":29,"nodeType":"45","endLine":16,"endColumn":158},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-global-assign","no-unsafe-negation"]